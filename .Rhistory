library(reticulate)
# use_python()
Sys.which('python')
source_python('test.py')
use_condaenv('ibm')
no
Sys.which('python')
source_python('test.py')
dumb()
source_python('test.py')
dumb()
library(reticulate)
use_condaenv('ibm')
Sys.which('python')
source_python('test.py')
source_python('utils.py')
dumb()
dumb(121212)
source_python('utils.py')
file_import()
source_python('utils.py')
file_import()
file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
source_python('utils.py')
source_python('utils.py')
source_python('utils.py')
main()
main()
main()
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
library(reticulate)
use_condaenv('ibm')
Sys.which('python')
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
library(reticulate)
use_condaenv('ibm')
Sys.which('python')
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
library(reticulate)
use_condaenv('ibm')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('utils.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
main()
install.packages('shiny')
shiny::runApp('bracket-generator')
runApp('bracket-generator')
runApp('bracket-generator')
runApp('bracket-generator')
runApp('bracket-generator')
source_python('../generate_bracket.py')
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
winner = main()
# file_import('2021/team_names.txt', '2021/power_rankings.txt', '2021/firstround.txt')
winner = main()
print(winner)
runApp('bracket-generator')
runApp('bracket-generator')
shiny::runApp('bracket-generator')
shiny::runApp('bracket-generator')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('../generate_bracket.py')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('generate_bracket.py')
winner = main()
source_python('generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
df
winner
output
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
output
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('generate_bracket.py')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
df
winner
source_python('generate_bracket.py')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
source_python('bracket-generator/generate_bracket.py')
source_python('bracket-generator/generate_bracket.py')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('bracket-generator/generate_bracket.py')
library(reticulate)
use_condaenv('3pt')
Sys.which('python')
source_python('bracket-generator/generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
df
winner
output
source_python('generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
df
shiny::runApp('bracket-generator')
use_condaenv('3pt')
Sys.which('python')
source_python('generate_bracket.py')
output = main()
winner = output[[1]]
df = output[[2]]
df
runApp('bracket-generator')
runApp('bracket-generator')
